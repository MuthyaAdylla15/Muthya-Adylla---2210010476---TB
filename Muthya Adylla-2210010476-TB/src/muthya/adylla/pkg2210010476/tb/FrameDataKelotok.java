/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package muthya.adylla.pkg2210010476.tb;

/**
 *
 * @author acer
 */
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class FrameDataKelotok extends javax.swing.JFrame {
      private Connection conn;
    private Statement stmt;
    private ResultSet rs;
    private DefaultTableModel tableModel;
    /**
     * Creates new form FrameDataKelotok
     */
    public FrameDataKelotok() {
        initComponents();
        this.setLocationRelativeTo(null);
        getContentPane().setBackground(new java.awt.Color(64, 224, 208));
            String[] columnNames = {"Kelotok", "Nama Penumpang","Jumlah Penumpang", "Tujuan Wisata"};
        tableModel = new DefaultTableModel(columnNames, 0);
        tableDataKelotok.setModel(tableModel);
        
        loadData();
        tableDataKelotok.getSelectionModel().addListSelectionListener(e -> {
    int selectedRow = tableDataKelotok.getSelectedRow();
    if (selectedRow != -1) {
        txtKelotok.setText(tableModel.getValueAt(selectedRow, 0).toString());
        txtNama.setText(tableModel.getValueAt(selectedRow, 1).toString());
        txtPenumpang.setText(tableModel.getValueAt(selectedRow, 2).toString());
        cmbTujuan.setSelectedItem(tableModel.getValueAt(selectedRow, 3).toString());
    }
});
    }

    private void loadData() {
    try {
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_wisata", "root", "");
        Statement stmt = conn.createStatement();
        String sql = "SELECT kelotok, nama, jumlah_penumpang, tujuan_wisata FROM pembelian";
        ResultSet rs = stmt.executeQuery(sql);

        tableModel.setRowCount(0);

        while (rs.next()) {
            String kelotok = rs.getString("kelotok");
            String nama = rs.getString("nama");
            int jumlahPenumpang = rs.getInt("jumlah_penumpang");
            String tujuanWisata = rs.getString("tujuan_wisata");

            tableModel.addRow(new Object[]{kelotok, nama, jumlahPenumpang, tujuanWisata});
            
        }

        conn.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
}
       private void clearFields() {
        txtKelotok.setText("");
        txtNama.setText("");
        txtPenumpang.setText("");
        cmbTujuan.setSelectedIndex(0);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDataKelotok = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnEdit = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnHapus = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnCetak = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnKembali = new javax.swing.JButton();
        txtKelotok = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        txtPenumpang = new javax.swing.JTextField();
        cmbTujuan = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("DATA KELOTOK");

        tableDataKelotok.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableDataKelotok);

        jLabel2.setText("Kelotok");

        btnEdit.setText("EDIT DATA");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        jLabel3.setText("Nama Penumpang");

        btnHapus.setText("HAPUS DATA");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        jLabel4.setText("Jumlah Penumpang");

        btnCetak.setText("CETAK DATA");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });

        jLabel5.setText("Tujuan Wisata");

        btnKembali.setText("KEMBALI");
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });

        cmbTujuan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PILIH OBJEK WISATA", "1. Wisata Pulau Kembang", "2. Wisata Pasar Terapung ", "3. Wisata Susur Sungai Banjarmasin", "4. Wisata Pulau Batu" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(238, 238, 238)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtKelotok, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                            .addComponent(txtNama))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPenumpang, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                            .addComponent(cmbTujuan, 0, 1, Short.MAX_VALUE))))
                .addGap(17, 17, 17))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEdit)
                .addGap(30, 30, 30)
                .addComponent(btnHapus)
                .addGap(18, 18, 18)
                .addComponent(btnCetak)
                .addGap(28, 28, 28)
                .addComponent(btnKembali)
                .addGap(78, 78, 78))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(txtKelotok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPenumpang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTujuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdit)
                    .addComponent(btnHapus)
                    .addComponent(btnCetak)
                    .addComponent(btnKembali))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
     int selectedRow = tableDataKelotok.getSelectedRow();
    if (selectedRow != -1) {
        String kelotok = txtKelotok.getText();
        String nama = txtNama.getText();
        int jumlahPenumpang = Integer.parseInt(txtPenumpang.getText());
        String tujuanWisata = cmbTujuan.getSelectedItem().toString();

        tableModel.setValueAt(kelotok, selectedRow, 0);
        tableModel.setValueAt(nama, selectedRow, 1);
        tableModel.setValueAt(jumlahPenumpang, selectedRow, 2);
        tableModel.setValueAt(tujuanWisata, selectedRow, 3);

        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_wisata", "root", "");
            String sql = "UPDATE pembelian SET kelotok = ?, nama = ?, jumlah_penumpang = ?, tujuan_wisata = ? WHERE kelotok = ? AND nama = ?";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, kelotok);
            pstmt.setString(2, nama);
            pstmt.setInt(3, jumlahPenumpang);
            pstmt.setString(4, tujuanWisata);
            pstmt.setString(5, (String) tableModel.getValueAt(selectedRow, 0)); 
            pstmt.setString(6, (String) tableModel.getValueAt(selectedRow, 1)); 
            pstmt.executeUpdate();
            conn.close();
            
            JOptionPane.showMessageDialog(this, "Data berhasil diperbarui!");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error updating data: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(this, "Pilih data yang ingin diedit!");
    }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
          int selectedRow = tableDataKelotok.getSelectedRow();
    if (selectedRow != -1) {
        String kelotok = (String) tableDataKelotok.getValueAt(selectedRow, 0);
        String nama = (String) tableDataKelotok.getValueAt(selectedRow, 1);
        
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_wisata", "root", "");
            Statement stmt = conn.createStatement();
            
            String sql = "DELETE FROM pembelian WHERE kelotok = '" + kelotok + "' AND nama = '" + nama + "'";
            stmt.executeUpdate(sql);

            tableModel.removeRow(selectedRow);

            conn.close();
            JOptionPane.showMessageDialog(this, "Data deleted successfully!");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
          try {
        String filePath = System.getProperty("user.dir") + "/kelotok_data.csv";

        FileWriter writer = new FileWriter(filePath);

        writer.append("Kelotok, Nama Penumpang, Jumlah Penumpang, Tujuan Wisata\n");

        for (int i = 0; i < tableModel.getRowCount(); i++) {
            String kelotok = (String) tableModel.getValueAt(i, 0);
            String nama = (String) tableModel.getValueAt(i, 1);
            int jumlahPenumpang = (Integer) tableModel.getValueAt(i, 2);
            String tujuanWisata = (String) tableModel.getValueAt(i, 3);

            writer.append(kelotok + "," + nama + "," + jumlahPenumpang + "," + tujuanWisata + "\n");
        }
        writer.flush();
        writer.close();
        JOptionPane.showMessageDialog(this, "Data berhasil disimpan ke: " + filePath);
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error exporting data: " + e.getMessage());
    }
    }//GEN-LAST:event_btnCetakActionPerformed

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
          new FrameMenuUtama().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnKembaliActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameDataKelotok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameDataKelotok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameDataKelotok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameDataKelotok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameDataKelotok().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKembali;
    private javax.swing.JComboBox<String> cmbTujuan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableDataKelotok;
    private javax.swing.JTextField txtKelotok;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtPenumpang;
    // End of variables declaration//GEN-END:variables
}
